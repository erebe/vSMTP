# syntax=docker/dockerfile:1
ARG UBUNTU_VERSION
FROM ubuntu:${UBUNTU_VERSION} as builder
ENV DEBIAN_FRONTEND=noninteractive

# Basic reaquirements
# + aarch64 cross compilation dependencies.
RUN apt update -yq && apt -yq install \
    gcc \
    curl \
    git

# Install Rust unattended.
# https://github.com/rust-lang/rustup/issues/297#issuecomment-444818896
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Get vSMTP.
WORKDIR /vSMTP
COPY . ./

# Install desired targets.
RUN rustup target add x86_64-unknown-linux-gnu

# Install fork of cargo deb.
RUN git clone https://github.com/viridIT/cargo-deb.git && cd cargo-deb && git checkout fix/changelog-path && cargo build --release && cd ..

# Package the app.
RUN ./cargo-deb/target/release/cargo-deb -p vsmtp -v --target=x86_64-unknown-linux-gnu

# Install and test vSMTP.
FROM --platform=linux/amd64 ubuntu:${UBUNTU_VERSION} as tester-x86_64
ENV DEBIAN_FRONTEND=noninteractive

COPY --from=builder /vSMTP/target/x86_64-unknown-linux-gnu/debian/*.deb ./vsmtp.deb

# https://piuparts.debian.org/doc/README.txt
RUN apt update -y && apt install -y piuparts lintian

RUN lintian ./vsmtp.deb

# piuparts installs the package in a chroot environment, thus I am unsure of the relevance of creating
# a new image to test the package. This will do for the time being.
CMD [ "piuparts", "vsmtp.deb" ]
