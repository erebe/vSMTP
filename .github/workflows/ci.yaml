name: CI
"on":
  pull_request:
    branches:
      - "**"
      - "!doc/**"

permissions:
  contents: read

env:
  RUST_MSRV: 1.66.1
  CARGO_TERM_COLOR: always

jobs:
  check:
    strategy:
      matrix:
        include:
          # Workspace stable
          - toolchain: stable
            path: ./Cargo.toml
          # Workspace MSRV
          - toolchain: 1.66.1
            path: ./Cargo.toml
          # Fuzz crate
          - toolchain: nightly
            path: ./fuzz/Cargo.toml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.toolchain }}-${{ matrix.path }}
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ${{ matrix.path }}

  cargo-udeps:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-udeps@0.1.35
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: udeps

  cargo-deny:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny@0.13.5
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: ${{ env.RUST_MSRV }}
          command: check
          arguments: ""

  cargo-hack-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack@0.5.25
      - run: cargo hack check --each-feature --no-dev-deps

  nextest:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest@0.9.48
      - uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --workspace --all-features

  coverage:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      - uses: actions-rs/grcov@v0.1
      - uses: codecov/codecov-action@v3

  lints:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: "rustfmt, clippy"
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: "--all -- --check"
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: "--all-targets --all-features -- -D warnings"

  check-doc:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: "--workspace --no-deps --all-features"
        env:
          RUSTDOCFLAGS: -D warnings --cfg docsrs
