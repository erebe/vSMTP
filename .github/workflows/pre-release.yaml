name: Pre-Release
on:
  pull_request:
    branches:
      - "main"
      - "staging"

permissions:
  contents: read

jobs:
  check-bump:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ github.event.pull_request.labels.*.name }}
          if ${{ contains(github.event.pull_request.labels.*.name, 'B-candidate') }}; then
            echo "BUMP=rc" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-release') }}; then
            echo "BUMP=release" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-patch') }}; then
            echo "BUMP=patch" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-minor') }}; then
            echo "BUMP=minor" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-major') }}; then
            echo "BUMP=major" >> $GITHUB_OUTPUT
          else
            exit 1
          fi
        id: get-bump-method
      - run: echo ${{ steps.get-bump-method.outputs.BUMP }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-release@0.24.2
      - run: cargo release ${{ steps.get-bump-method.outputs.BUMP }} --workspace --allow-branch "HEAD"

  check-cargo-package:
    strategy:
      fail-fast: false
      matrix:
        include:
          - path: "src/vsmtp/vsmtp-mail-parser"
          - path: "src/vsmtp/vsmtp-auth"
          - path: "src/vsmtp/vsmtp-common"
          - path: "src/vqueue"
          - path: "src/vsmtp/vsmtp-rule-engine"
          - path: "src/vsmtp/vsmtp-delivery"
          - path: "src/vsmtp/vsmtp-protocol"
          - path: "src/vsmtp/vsmtp-server"
          - path: "src/vsmtp/vsmtp-core"
          - path: "src/vsmtp/vsmtp-plugin-vsl"
          - path: "src/plugins/vsmtp-plugin-csv"
          - path: "src/plugins/vsmtp-plugin-mysql"
          - path: "src/plugins/vsmtp-plugin-ldap"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - run: cargo package --manifest-path ${{ matrix.path }}/Cargo.toml

  build-and-test-ubuntu-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [20.04, 22.04]
        # TODO: add arm64 support.
        platform: [amd64]
        include:
          - platform: amd64
            platform_path: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - name: Build package for ubuntu ${{ matrix.version }}
        shell: bash
        run: |
          docker image build \
            --build-arg VSMTP_BRANCH=develop \
            --build-arg UBUNTU_VERSION=${{ matrix.version }} \
            -t vsmtp-ubuntu-${{ matrix.version }}-${{ matrix.platform }} \
            -f docker/ubuntu/Dockerfile.${{ matrix.platform }} \
            docker/ubuntu

      - name: Run piuparts for ubuntu ${{ matrix.version }}
        shell: bash
        run: |
          docker run --privileged --name piuparts-ubuntu-${{ matrix.version }} \
            vsmtp-ubuntu-${{ matrix.version }}-${{ matrix.platform }}

  build-and-test-debian-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: add arm64 support.
        platform: [amd64]
        include:
          - platform: amd64
            platform_path: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - name: build for debian
        shell: bash
        run: |
          docker image build \
            --build-arg VSMTP_BRANCH=develop \
            -t vsmtp-debian-${{ matrix.platform }} \
            -f docker/debian/Dockerfile.${{ matrix.platform }} \
            docker/debian

      - name: run piuparts for debian
        shell: bash
        run: |
          docker run --privileged --name piuparts-debian \
            vsmtp-debian-${{ matrix.platform }}

  # TODO: add rpm support.
  # compile-and-test-redhat-docker:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       version: [ubi8, ubi9]
  #     # TODO: add arm64 support.
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: build for redhat
  #       shell: bash
  #       run: |
  #         docker image build
  #           --build-arg REDHAT_VERSION=${{ matrix.version }}   \
  #           --build-arg VSMTP_BRANCH=develop \
  #
  #           -t vsmtp-redhat-${{ matrix.version }}                               \
  #           docker/redhat
